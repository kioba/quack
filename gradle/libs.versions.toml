[versions]
buildToolsVersion = "33.0.0"
compileSdkString = "33"
minSdk = "21"
targetSdkString = "33"

# development
agp = "8.0.2"
kotlin = "1.8.10"
androidExperimental = "0.11.1"

# lib versions
androidXTest = "1.1.0"
espresso = "3.1.1"
junit4 = "4.12"
mockK = "1.13.5"
moshi = "1.14.0"
okHttp = "4.10.0"
retrofit = "2.9.0"
testRunner = "1.1.1"

# arrow
arrow = "0.9.0"

# rx-java
rxandroid = "2.1.0"
rxbinding = "3.0.0-alpha2"
rxjava = "2.2.7"
rxrelay = "2.1.0"

# android-x
androidXAppcompat = "1.3.1"
androidXConstraintLayout = "2.0.0-beta1"
androidXLifecycle = "2.0.0"
androidXNavigation = "1.0.0-alpha05"
androidXRecyclerview = "1.1.0-alpha05"
androidXcoreKtx = "1.0.2"
constraintLayout = "1.1.3"
material = "1.0.0"
androidXRoom = "2.1.0-beta01"
activity = "1.7.1"

# compose
composeBom = "2023.05.01"
composeCompiler = "1.4.4"

# di
dagger = "2.22.1"

# image loading
picasso = "2.71828"


[libraries]
build-android = { module = "com.android.tools.build:gradle", version.ref = "agp" }
build-android-gradleApi = { module = "com.android.tools.build:gradle-api", version.ref = "agp" }
build-android-gradleExperimental = { module = "com.android.tools.build:gradle-experimental", version.ref = "androidExperimental" }
build-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# network
network-moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
network-moshi-core = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
network-moshi-kotlinCodeGen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }
network-okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
network-okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttp" }
network-okhttp-mockWebServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }
network-retrofit-core = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
network-retrofit-moshiConverter = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
network-retrofit-rxJavaAdapter = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit" }
network-retrofit-scalarsConverter = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }

# unit test
test-junit4 = { module = "junit:junit", version.ref = "junit4" }
test-mockK = { module = "io.mockk:mockk", version.ref = "mockK" }

# android test
androidTest-androidXTest-core = { module = "androidx.test:core", version.ref = "androidXTest" }
androidTest-androidXTest-junit = { module = "androidx.test.ext:junit", version.ref = "androidXTest" }
androidTest-espresso = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
androidTest-testRunner = { module = "androidx.test:runner", version.ref = "testRunner" }

# arrow
arrow-coreData = { module = "io.arrow-kt:arrow-core-data", version.ref = "arrow" }
arrow-coreExtensions = { module = "io.arrow-kt:arrow-core-extensions", version.ref = "arrow" }
arrow-effectsData = { module = "io.arrow-kt:arrow-effects-data", version.ref = "arrow" }
arrow-effectsExtensions = { module = "io.arrow-kt:arrow-effects-extensions", version.ref = "arrow" }
arrow-extrasData = { module = "io.arrow-kt:arrow-extras-data", version.ref = "arrow" }
arrow-extrasExtensions = { module = "io.arrow-kt:arrow-extras-extensions", version.ref = "arrow" }
arrow-syntax = { module = "io.arrow-kt:arrow-syntax", version.ref = "arrow" }
arrow-typeclasses = { module = "io.arrow-kt:arrow-typeclasses", version.ref = "arrow" }

# rx-java
rx-android = { module = "io.reactivex.rxjava2:rxandroid", version.ref = "rxandroid" }
rx-java = { module = "io.reactivex.rxjava2:rxjava", version.ref = "rxjava" }
rx-relay = { module = "com.jakewharton.rxrelay2:rxrelay", version.ref = "rxrelay" }

# rx-binding
rxbinding-appcompat = { module = "com.jakewharton.rxbinding3:rxbinding-appcompat", version.ref = "rxbinding" }
rxbinding-core = { module = "com.jakewharton.rxbinding3:rxbinding-core", version.ref = "rxbinding" }
rxbinding-lib = { module = "com.jakewharton.rxbinding3:rxbinding", version.ref = "rxbinding" }
rxbinding-material = { module = "com.jakewharton.rxbinding3:rxbinding-material", version.ref = "rxbinding" }
rxbinding-recyclerview = { module = "com.jakewharton.rxbinding3:rxbinding-recyclerview", version.ref = "rxbinding" }

# anrdoid-x
androidX-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidXAppcompat" }
androidX-constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidXConstraintLayout" }
androidX-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidXcoreKtx" }
androidX-lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "androidXLifecycle" }
androidX-lifecycle-extensions = { module = "androidx.lifecycle:lifecycle-extensions", version.ref = "androidXLifecycle" }
androidX-lifecycle-viewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidXLifecycle" }
androidX-material = { module = "com.google.android.material:material", version.ref = "material" }
androidX-recyclerView = { module = "androidx.recyclerview:recyclerview", version.ref = "androidXRecyclerview" }

# room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidXRoom" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidXRoom" }
room-rxjava2 = { module = "androidx.room:room-rxjava2", version.ref = "androidXRoom" }
room-testing = { module = "androidx.room:room-testing", version.ref = "androidXRoom" }

# di
dagger-core = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-android = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
dagger-androidSupport = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-androidProcessor = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }

# image loading
picasso = { module = "com.squareup.picasso:picasso", version.ref = "picasso" }

#compose
androidX-compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
androidX-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
androidX-compose-animation = { module = "androidx.compose.animation:animation" }
androidX-compose-animationCore = { module = "androidx.compose.animation:animation-core" }
androidX-compose-foundation = { module = "androidx.compose.foundation:foundation" }
androidX-compose-foundationLayout = { module = "androidx.compose.foundation:foundation-layout" }
androidX-compose-foundationText = { module = "androidx.compose.foundation:foundation-text" }
androidX-compose-material3 = { module = "androidx.compose.material3:material3" }
androidX-compose-materialIconsCore = { module = "androidx.compose.material:material-icons-core" }
androidX-compose-materialIconsExtended = { module = "androidx.compose.material:material-icons-extended" }
androidX-compose-runtime = { module = "androidx.compose.runtime:runtime" }
androidX-compose-runtimeLivedata = { module = "androidx.compose.runtime:runtime-livedata" }
androidX-compose-test-ui-junit4 = { module = "androidx.compose.ui:ui-test-junit4" }
androidX-compose-test-ui-manifest = { module = "androidx.compose.ui:ui-test-manifest" }
androidX-compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidX-compose-ui = { module = "androidx.compose.ui:ui" }
androidX-compose-uiUtil = { module = "androidx.compose.ui:ui-util" }


[bundles]
compose = [
    "androidX-compose-activity",
    "androidX-compose-foundation",
    "androidX-compose-foundationLayout",
    "androidX-compose-material3",
    "androidX-compose-materialIconsCore",
    "androidX-compose-materialIconsExtended",
    "androidX-compose-runtime",
    "androidX-compose-tooling",
    "androidX-compose-ui",
]